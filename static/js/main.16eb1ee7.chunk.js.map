{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["OldSchoolMenuLink","_ref","label","to","activeOnlyWhenExact","react_default","a","createElement","Route","path","exact","children","_ref2","match","className","Link","Home","src","logo","alt","Projects","About","href","CustomLinkExample","BrowserRouter","App_OldSchoolMenuLink","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.16eb1ee7.chunk.js","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport 'tachyons';\n\nconst CustomLinkExample = () => (\n  <Router >\n    <div>\n      <div>\n        <ul className=\"tr shadow-hover\">\n           <li className=\"nav\"><OldSchoolMenuLink activeOnlyWhenExact={true} to=\"/\" label=\"home\" /></li>\n           <li className=\"nav\"><OldSchoolMenuLink to=\"/projects\" label=\"projects\" /></li>\n           <li className=\"nav\"><OldSchoolMenuLink to=\"/about\" label=\"about\" /></li>\n         </ul>\n      </div>    \n       <div className=\"mh4\">\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/projects\" component={Projects} />\n          <Route path=\"/about\" component={About} />\n        </div>\n      </div>\n  </Router>\n);\n\nconst OldSchoolMenuLink = ({ label, to, activeOnlyWhenExact }) => (\n  <Route\n    path={to}\n    exact={activeOnlyWhenExact}\n    children={({ match }) => (\n      <div className={match ? \"active\" : \"\"}>\n        {match ? \">\" : \"\"}\n        <Link to={to}>{label}</Link>\n      </div>\n    )}\n  />\n);\n\nconst Home = () => (\n<div className=\"App\">\n    <header className=\"App-header mv4\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <h1 className=\"heading\">astronucleus</h1>\n      <img src={logo} className=\"App-logoX\" alt=\"logo\" />\n    </header>\n<br/><br/><p>\n    Two billion years ago, our ancestors were microbes;<br/><br/> \n    a half-billion years ago, fish;<br/><br/> \n    a hundred million years ago, something like mice;<br/><br/> \n    ten million years ago, arboreal apes;<br/><br/> \n    and a million years ago, proto-humans puzzling out to taming fire. <br/><br/> \n    Our evolututionary lineage is marked by mastery of change. <br/><br/> \n    In our time, the pace is quickening. <br/><br/><br/>\n    -CARL SAGAN\n</p>\n</div>\n);\n\nconst Projects = () => (\n  <div>\n    <h3 className=\"tc heading\">Projects</h3>\n    <p>\n        Research Phase\n        <ul>\n            <li>Carbon Costing - a theoretical costing methodology that imposes the need of companies to record and report the effects of business transactions in depleting natural resources and its effects to climate change</li>\n            <li>Multiplanetary value transfer system - evaluating the concept of multi-planetary exchange values and economics and use of onboard accounting systems implemented to asteroid mining robots or multi-planetary exploration projects</li>\n        </ul>\n    </p>\n  </div>\n);\n\nconst About = () => (\n  <div className=\"App\">\n    <header className=\"App-header mv4\">\n      <img src={logo} className=\"App-logo1\" alt=\"logo\" />\n      <h3 className=\"heading\">astronucleus</h3>\n      <img src={logo} className=\"App-logoX1\" alt=\"logo\" />\n    </header>\n    <h3>About</h3>\n    <div className=\"\">\n      At Astronucleus, we make bold predictions and practical applications about the convergence of exponential technologies. <br/><br/>\n      We track opportunities and possibilities in the next fifty years.<br/><br/>\n      We fundamentally believe in achieving more through the use of technology and collaboration. \n\n      <br/><br/><br/><br/><br/><br/>\n      We do innovation assessments..<br/>\n      <a href=\"https://contactastronucleus@gmail.com\">Contact us</a>\n    </div>\n  </div>  \n);\n\nexport default CustomLinkExample;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.2689ae14.svg\";"],"sourceRoot":""}